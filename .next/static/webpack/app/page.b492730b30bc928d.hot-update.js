"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/entities/Card/store/useDataCard.ts":
/*!************************************************!*\
  !*** ./src/entities/Card/store/useDataCard.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../store/store */ \"(app-pages-browser)/./src/entities/Card/store/store.ts\");\n// useCardData.ts\n\n\nconst useCardData = ()=>{\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchData = async ()=>{\n            setLoading(true);\n            try {\n                const result = await (0,_store_store__WEBPACK_IMPORTED_MODULE_1__.getCard)();\n                setCard(result);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            } finally{\n                setLoading(false);\n            }\n        };\n        // Выполняем запрос только если данных еще нет\n        if (card.length === 0) {\n            fetchData();\n        }\n    }, []);\n    return {\n        card,\n        loading\n    };\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useCardData);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9lbnRpdGllcy9DYXJkL3N0b3JlL3VzZURhdGFDYXJkLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpQkFBaUI7QUFDMEI7QUFDSDtBQUV4QyxNQUFNRyxjQUFjO0lBQ25CLE1BQU0sQ0FBQ0MsU0FBU0MsV0FBVyxHQUFHSiwrQ0FBUUEsQ0FBQztJQUV2Q0QsZ0RBQVNBLENBQUM7UUFDVCxNQUFNTSxZQUFZO1lBQ2pCRCxXQUFXO1lBQ1gsSUFBSTtnQkFDSCxNQUFNRSxTQUFTLE1BQU1MLHFEQUFPQTtnQkFDNUJNLFFBQVFEO1lBQ1QsRUFBRSxPQUFPRSxPQUFPO2dCQUNmQyxRQUFRRCxLQUFLLENBQUMsd0JBQXdCQTtZQUN2QyxTQUFVO2dCQUNUSixXQUFXO1lBQ1o7UUFDRDtRQUVBLDhDQUE4QztRQUM5QyxJQUFJTSxLQUFLQyxNQUFNLEtBQUssR0FBRztZQUN0Qk47UUFDRDtJQUNELEdBQUcsRUFBRTtJQUVMLE9BQU87UUFBRUs7UUFBTVA7SUFBUTtBQUN4QjtBQUVBLCtEQUFlRCxXQUFXQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9lbnRpdGllcy9DYXJkL3N0b3JlL3VzZURhdGFDYXJkLnRzPzZkODYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdXNlQ2FyZERhdGEudHNcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGdldENhcmQgfSBmcm9tICcuLi9zdG9yZS9zdG9yZSdcblxuY29uc3QgdXNlQ2FyZERhdGEgPSAoKSA9PiB7XG5cdGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc3QgZmV0Y2hEYXRhID0gYXN5bmMgKCkgPT4ge1xuXHRcdFx0c2V0TG9hZGluZyh0cnVlKVxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Y29uc3QgcmVzdWx0ID0gYXdhaXQgZ2V0Q2FyZCgpXG5cdFx0XHRcdHNldENhcmQocmVzdWx0KVxuXHRcdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZGF0YTonLCBlcnJvcilcblx0XHRcdH0gZmluYWxseSB7XG5cdFx0XHRcdHNldExvYWRpbmcoZmFsc2UpXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8g0JLRi9C/0L7Qu9C90Y/QtdC8INC30LDQv9GA0L7RgSDRgtC+0LvRjNC60L4g0LXRgdC70Lgg0LTQsNC90L3Ri9GFINC10YnQtSDQvdC10YJcblx0XHRpZiAoY2FyZC5sZW5ndGggPT09IDApIHtcblx0XHRcdGZldGNoRGF0YSgpXG5cdFx0fVxuXHR9LCBbXSlcblxuXHRyZXR1cm4geyBjYXJkLCBsb2FkaW5nIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgdXNlQ2FyZERhdGFcbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImdldENhcmQiLCJ1c2VDYXJkRGF0YSIsImxvYWRpbmciLCJzZXRMb2FkaW5nIiwiZmV0Y2hEYXRhIiwicmVzdWx0Iiwic2V0Q2FyZCIsImVycm9yIiwiY29uc29sZSIsImNhcmQiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/entities/Card/store/useDataCard.ts\n"));

/***/ })

});